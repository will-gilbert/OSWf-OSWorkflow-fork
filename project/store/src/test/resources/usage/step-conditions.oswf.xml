<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE workflow SYSTEM "OSWf-3.0.dtd">


<workflow>

  <meta name="title">LeaveRequest using 'step-conditions</meta>
  <meta name="description"><![CDATA[
	
	'step-conditions' are used to communicate workflow condition back to the
	driving application.  The application can then control if the user is allow
	access to the steps actions.
	
	'step-conditions' do not implicitly restrict access to a steps actions nor
	are querying 'step-conditions' an effective way to create a work list.
	
  ]]></meta>

    <!--  List of possible starting points in the workflow ===============================  -->

	<initial-actions>
	
		<action id="1" name="Start">
			<results>
				<default-result step="100" status="Underway" owner="Joe Average"/>
			</results>
		</action>
	</initial-actions>


    <!-- Steps ============================================================================ -->
    
	<steps>
	
	    <!-- Employee submits a leave request  ================================= -->
	    
		<step id="100" name="Employee Request">

            <step-conditions>

                <step-condition name="Joe Average is Underway">
                    <restrict-to>
                        <conditions>
                            <condition type="class" name='org.informagen.oswf.conditions.HasStatusOf'>
                                    <arg name="status">Underway</arg>
                            </condition>
                            <condition type="class" name='org.informagen.oswf.conditions.IsStepOwner' />
                        </conditions>
                    </restrict-to>
                </step-condition>

                <step-condition name="Joe Average is Finished">
                    <restrict-to>
                        <conditions>
                            <condition type="class">
                                    <arg name="class.name">org.informagen.oswf.conditions.HasStatusOf</arg>
                                    <arg name="status">Finished</arg>
                            </condition>
                            <condition name="allow.owner.only" type="class">
                                <arg name="class.name">org.informagen.oswf.conditions.IsStepOwner</arg>
                            </condition>
                        </conditions>
                    </restrict-to>
                </step-condition>

                <step-condition name="AlwaysTrue">
                    <restrict-to>
                        <conditions>
                            <condition type="beanshell">
                                <arg name="script">true</arg>
                            </condition>
                        </conditions>
                    </restrict-to>
                </step-condition>


                <step-condition name="AlwaysFalse">
                    <restrict-to>
                        <conditions>
                            <condition type="beanshell">
                                <arg name="script">false</arg>
                            </condition>
                        </conditions>
                    </restrict-to>
                </step-condition>
            </step-conditions>


			<actions>
				<action id="101" name="Request Leave">
					<results>
						<default-result split="10000" status="Requested"/>
					</results>
				</action>
			</actions>
		</step>


	    <!-- Manager approves or denies request based on labor needs  ========= -->
	    
		<step id="200" name="Line Manager Approval">

			<actions>
				<action id="201" name="Approve" >
					<results>
						<default-result exit-status="Manager approved" status="joining" join="10000" />
					</results>
				</action>

				<action id="202" name="Deny" >
					<results>
						<default-result exit-status="Manager denied" status="joining" join="10000"/>
					</results>
				</action>
			</actions>
		</step>

	    <!-- HR Manager approves or denies request based on employee record ==== -->

		<step id="300" name="HR Manager Approval">

			<actions>
				<action id="301" name="HR Approve" >
					<results>
						<default-result exit-status="HR approved" join="10000"/>
					</results>
				</action>

				<action id="302" name="HR Deny" >
					
				    <!-- Only HR Directors can approve requests -->
				    <restrict-to>
				        <conditions>
							<condition type='alias' name='hasRole'>
								<arg name="role">HR Director</arg>
						    </condition>
				        </conditions>
				    </restrict-to>
					
					<results>
						<default-result exit-status="HR denied" join="10000"/>
					</results>
				</action>
			</actions>
		</step>

	    <!-- System sends e-mail to employee =================================== -->

		<step id="400" name="Notify employee">

			<actions>
				<action id="401" name="Notify" auto="true" finish="true" >
					<results>
						<default-result status="Line approval"/>
					</results>

				</action>

			</actions>

		</step>
	</steps>

    <!-- Splits =========================================================================== -->

    <!-- The leave approval goes to both the line manager and the HR manager ======= -->
    
	<splits>
		<split id="10000">
			<default-result status="Underway" step="200" />
			<default-result status="Underway" step="300" />
		</split>
	</splits>


    <!-- Joins ============================================================================ -->

    <!-- The line manager and HR manager's decisions are combined here ============= -->
	<joins>
		<join id="10000">
			<conditions>
				<condition type="beanshell">
					<arg name="script"><![CDATA[
					
                        typedMap.setString("result", "denied");
                        
                        if(jn.get(200).getStatus().endsWith("approved") && 
                           jn.get(300).getStatus().endsWith("approved")) {
                            typedMap.setString("result", "approved");
                        }
                        
                        // Final result
                        !("Underway".equals(jn.get(200).getStatus())) && 
                        !("Underway".equals(jn.get(300).getStatus()));
                        
					]]></arg>
				</condition>
			</conditions>
			
			<default-result exit-status="JoinFinished" status="${result}" step="400"/>
			
		</join>
	</joins>
	
	
</workflow>