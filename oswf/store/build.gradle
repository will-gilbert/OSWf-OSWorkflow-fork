task usage doLast { print """

gradle javaCompile
  Compile Java source code displaying warnings and error to the terminal console.

gradle test; open target/reports/tests/index.html
      Run the unit test then show the report

gradle clean
  Delete build files and targets
  
gradle schemaExport

-----------------------------------------------------------------------------------------------

Create a MySQL database using the SQL script: oswf-store.mysql.sql

After running tests into a MySQL database you can execute the following SQL commands to cleanup;

TRUNCATE TABLE xmldescriptor;
TRUNCATE TABLE processvariable;
TRUNCATE TABLE historystep;
TRUNCATE TABLE currentstep;
DELETE FROM processinstance;
""" }


//============================================================================================

import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'groovy'  // Includes 'java' plugin  
apply plugin: 'maven'



// C O N F I G U R A T I O N ==================================================================

group = 'org.informagen.oswf'
version = '1.1.0-SNAPSHOT'

ext.applicationName = "Hibernate WorkflowStore and PropertySet"

// Properties Configuration -------------------------------------------------------------------

// Get the target database; Use H2 as the defualt if there is no 'gradle.properties' file
ext.database = findProperty('database') ?: 'H2'
ext.rdbms_configuration = "${database}.hibernate.xml"

// Configure Hibernate based on the 'gradle.properties' file; Use H2 configuration as the default

ext.hibernateProperties = [
    'hibernate.connection.driver_class': findProperty("${database}.connection.driver_class") ?: 'org.h2.Driver',
    'hibernate.dialect'                : findProperty("${database}.dialect")                 ?: 'org.hibernate.dialect.H2Dialect',
    'hibernate.connection.url'         : findProperty("${database}.connection.url")          ?: 'jdbc:h2:mem:oswf;DB_CLOSE_DELAY=-1',
    'hibernate.connection.username'    : findProperty("${database}.connection.username")     ?: 'sa',
    'hibernate.connection.password'    : findProperty("${database}.connection.password")     ?: '',
    'hibernate.hbm2ddl.auto'           : findProperty("${database}.hbm2ddl.auto")            ?: 'create-drop',
    'hibernate.connection.autocommit'  : findProperty("${database}.connection.autocommit")   ?: 'false',
    'hibernate.connection.pool_size'   : findProperty("${database}.connection.pool_size")    ?: '1'
]

compileTestJava.options.compilerArgs = compileJava.options.compilerArgs;

configurations.all {
  resolutionStrategy {
      
    // cache dynamic versions for 10 minutes
    cacheDynamicVersionsFor 0, 'seconds'
    
    // don't cache changing modules at all
    cacheChangingModulesFor 0, 'seconds'
  }
} 
// R E P O S I T O R I E S   &   D E P E N D E N C I E S ======================================


dependencies {

    compile project(':core')
    compile project(':vars')
    compile project(':usage')
    compile project(':workflows')

    compile ([
        // Hibernate 3.x
        "org.hibernate:hibernate-core:$hibernate",
        
        // Simple Logging Facade for Java 
        'org.slf4j:slf4j-api:$slf4j'
    ])
    
    runtime ([

        // C3P0 - Connection Pooling  
        "org.hibernate:hibernate-c3p0:$hibernate",
        
        // BeanShell
        "bsh:bsh:$bsh"
    ])

    testCompile([ ])

    testRuntime([
    
        // Hibernate - runtime components
        "org.hibernate:hibernate-entitymanager:$hibernate",

         // Use log4j for as the SLF4J Logger
         "org.slf4j:slf4j-log4j12:$slf4j",
         "log4j:log4j:$log4j",

        // Database drivers: H2 and MySQL
        "mysql:mysql-connector-java:$mysql",
        "com.h2database:h2:$h2"
    ])

}


sourceSets {

    test { 
        java { srcDirs = [] }
        groovy { srcDirs = ['src/test/java', 'src/test/groovy'] }
    }
}


// Augment the 'processTestResources' task from the 'java' plugin.  Use filtering to replace 
//   any '@...@' tags with the contents of the 'tokens' map

processTestResources {
    filter(ReplaceTokens, tokens: hibernateProperties)
}

// U N I T   T E S T I N G --------------------------------------------------------------------

test {

    systemProperty 'rdbms-configuration', rdbms_configuration

    
   forkEvery = 5
   maxParallelForks = 4

   // Display the test results as HTML if any test fails; 'ignoreFailure'
   //   must ge set to false in order for the 'doLast' to be executed 
   ignoreFailures = true
     
   
}


// S C H E M A   E X P O R T  ===============================================================


task schemaExport(dependsOn: ['jar'], type:JavaExec) {

    description ='Create schema DDL from a set of HBM files' 
    
    // Define the properties for the 'JavaExec' task; 256M Memory, increase for larger Apps

    main ='org.hibernate.tool.hbm2ddl.SchemaExport'
    jvmArgs = ['-Xmx256M']
    classpath = files([sourceSets.main.runtimeClasspath])

    // Select a hibernate dialect; Pass as a system property
    //    Re: http://www.javabeat.net/qna/163-list-of-hibernate-sql-dialects/

    systemProperties = [
       //"hibernate.dialect" : "org.hibernate.dialect.H2Dialect"
       //"hibernate.dialect" : "org.hibernate.dialect.OracleDialect"
       "hibernate.dialect" : "org.hibernate.dialect.MySQLInnoDBDialect"
    ]    

    // See Hibernate Toolset Guide, Section 20.1.2. Running the tool
    // http://docs.jboss.org/hibernate/orm/3.3/reference/en/html/toolsetguide.html#toolsetguide-s1-3

    args = [
      "--create",                // Will create 'create table' statements
      "--text",                  // Used with --output but DDL is also sent to STDOUT
      "--format",                // Pretty print
      "--delimiter=;",           // Statement terminator
      "--output=oswf-store.sql", // DDL output file
      
      // HBM files as referenced on the file system not resource files
      "src/main/resources/org/informagen/oswf/hbm/HibernateCurrentStep.hbm.xml",
      "src/main/resources/org/informagen/oswf/hbm/HibernateHistoryStep.hbm.xml",
      "src/main/resources/org/informagen/oswf/hbm/HibernateProcessInstance.hbm.xml",
      "src/main/resources/org/informagen/oswf/hbm/HibernateProcessDescription.hbm.xml",
      "src/main/resources/org/informagen/oswf/hbm/HibernatePersistentVarsItem.hbm.xml",
      "src/main/resources/org/informagen/oswf/hbm/WorkflowDescriptor.hbm.xml"
   ]
    
}




