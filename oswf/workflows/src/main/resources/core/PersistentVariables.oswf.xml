<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE workflow SYSTEM 'OSWf-3.0.dtd'>
<workflow>


  <initial-actions> 
 
    <action id="1" name="Set/Get persistent variable">

      <meta name='description'><![CDATA[  
        Use 'SetStringProperty' function to set persistent variable 'test-name' to 'Hello, World'.
        Go to step 100 and verify that the persistent variable was set using 'getStringPoperty'.
      ]]></meta>
    
      <pre-functions>
        <function type='alias' name='setString'>
          <arg name="name">test-name</arg>
          <arg name="value">Hello, World</arg>
        </function>
      </pre-functions>
      <results> <default-result step="100"/> </results>
    </action> 



    <action id="2" name="Set/Get persistent">

      <meta name='title'>Test Set/Get persistent variables functions</meta>  
      <meta name='description'><![CDATA[
        Create a persistent variable 'test-name' with content 'Hello, World'.
        Go to step 200 and use the 'hasProperty' alias to verify
        ]]></meta>
      <pre-functions>
        <function type='alias' name='setString'>
          <arg name="name">test-name</arg>
          <arg name="value">Hello, World</arg>
        </function>
      </pre-functions>
      <results> <default-result step="200"/> </results>
    </action> 


 
    <action id="3" name="Persistent variable not defined">
      <meta name='description'><![CDATA[
        Persistent variable 'name' not defined, throw exception
        ]]></meta>
      <results> <default-result step="300"/> </results>
    </action> 


 
    <action id="4" name="Set PropertySet to 'Hello, World'">

      <meta name='description'><![CDATA[
        Create a persistent variable 'test-name' with content 'Hello, World'.
        Go to step 400 and use the 'hasProperty' alias to verify
        ]]></meta>

      <pre-functions>
        <function type='alias' name='setString'>
          <arg name="name">test-name</arg>
          <arg name="value">Hello, World</arg>
        </function>
      </pre-functions>
      <results> <default-result step="400"/> </results>
    </action> 
    
  </initial-actions>



  <steps>

    <step id="100" name="Test getStringProperty Function">

      <meta name='description'><![CDATA[  
        Use 'getStringProperty' function to copy the persistent variable, 'test-name',
         to the transient variable 'test'.  Use the core test unction, 'assertEquals' 
         to test this transient variable.
      ]]></meta>

      <actions>
        <action id="100" name="action" auto='true' finish='true'>

          <pre-functions> 
              
            <function type='alias' name='getString'>
              <arg name="name">test-name</arg>
              <arg name="variable">test</arg>
            </function>
                        
            <function type='alias' name='assertEquals'>
              <arg name='expected'>${test}</arg>
              <arg name='actual'>Hello, World</arg>
            </function> 
            
          </pre-functions>

          <results><default-result/></results>
        </action>
      </actions>
    </step>


    <step id="200" name="Test hasProperty Condition, exists">

      <meta name='description'><![CDATA[
          Test that a persistent variable exists but does not test the its value
      ]]></meta>

      <actions>

        <action id="200" name="action" auto='true' finish='true'>
          <restrict-to>
            <conditions>
              <condition type='alias' name='hasProperty'>
              <arg name="name">test-name</arg>
              </condition>
            </conditions>
          </restrict-to>
          <results><default-result/></results>
        </action>

      </actions>
    </step> 

    
    <step id="300" name="Test hasProperty Condition, no-args">

      <meta name='description'><![CDATA[ 
          Should throw an 'IllegalArgumentException', missing 'arg' element
      ]]></meta>

      <actions>

        <action id="300" name="action" auto='true' finish='true'>
          <restrict-to>
            <conditions>
              <condition type='alias' name='hasProperty'></condition>
            </conditions>
          </restrict-to>
          <results><default-result/></results>
        </action>

      </actions>
    </step>

    <step id="400" name="Test hasProperty Condition, matches">

      <meta name='description'><![CDATA[
          Test that a property exists and it matches 'value' 
      ]]></meta>


      <actions>

        <action id="400" name="action" auto='true' finish='true'>
          <restrict-to>
            <conditions>
              <condition type='alias' name='hasProperty'>
                <arg name='name'>test-name</arg>
                <arg name='value'>Hello, World</arg>
              </condition>
            </conditions>
          </restrict-to>
          <results><default-result/></results>
        </action>

      </actions>
    </step> 


  </steps>

</workflow>

